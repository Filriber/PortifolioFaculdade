
/**
 * Autores:
 *          FILIPE RIBEIRO DOS SANTOS
 *          FRANCISCO O A LOURENÇO
 *          NATHALIA ROBSON AAL SILVA
 *          JOÃO VICTOR DE OLIVEIRA SILVA  
 */

package com.mycompany.projetointegradorquiztemati;

import java.util.Scanner;

import java.util.ArrayList;
import java.util.List;
import java.util.Collections;

import java.util.Random;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class ProjetoIntegradorQuiz {
   
    public static void main(String args[]) {
/**
 * Obter nome do jogador
 */
        String nomeJogador;

        nomeJogador = obterNomeJogador();
/**
 * Controlar a execução do jogo
 */
        controlarJogo(nomeJogador);
    }
/**
 * Função para obter o nome do jogador
 */
    public static String obterNomeJogador() {
/**
 * Obter o nome do jogador
 */
        Scanner entradaJogador = new Scanner (System.in);

        String nomeJogador;
       
        System.out.println("\n");
       
        System.out.println("=============================================");
        System.out.println("=               Bem-vindo!!!                =");
        System.out.println("=-------------------------------------------=");
        System.out.println("=                                           =");
        System.out.println("=      O tema deste 'Quiz' é sobre TI       =");
        System.out.println("=                                           =");
        System.out.println("=============================================");

        System.out.println("Informe o nome do jogador: ");

        nomeJogador = entradaJogador.nextLine();
        
        return nomeJogador;
    }
/**
 * Função para controlar a execução do jogo
 */
    public static void controlarJogo(String nomeJogador) {
/**
 * Array para controle das perguntas
 * A posição (0) do Array armazenará o número da pergunta atual que será 
 * respondida 
 * As posições de (1) à (10) vão registrar os número das perguntas já utilizadas
 * A posição (11) do Array armazenará o nome do Jogador 
 */
        List<String> listaPerguntas = new ArrayList<String>(12);
        listaPerguntas.add("00");
        listaPerguntas.add("00");
        listaPerguntas.add("00");
        listaPerguntas.add("00");
        listaPerguntas.add("00");
        listaPerguntas.add("00");
        listaPerguntas.add("00");
        listaPerguntas.add("00");
        listaPerguntas.add("00");
        listaPerguntas.add("00");
        listaPerguntas.add("00");
        listaPerguntas.add(nomeJogador);

/**
 * Controle de seleção da opção do menu
 */
        String opcaoMenu;

        do {

            opcaoMenu = montarMenuJogo(nomeJogador);

            switch (opcaoMenu) {
                case "1":

                    mostrarInstrucoesJogo();

                    break;
                case "2":

                    executarJogo(listaPerguntas);

                    break;
                case "3":

                    mostrarCreditosJogo();

                    break;
                case "4":

                    System.out.println("Jogo encerrado!");

                    break;
                default:

                    System.err.println("Opção invalida! Tente novamente!");
            }
        }
        while (!opcaoMenu.equals("4"));
    }
/**
 * Função para montar o menu do jogo
 */
    public static String montarMenuJogo(String nomeJogador) {
/**
 * Montar o menu do jogo e receber a opção de menu
 */
        Scanner entradaOpcao = new Scanner (System.in);

        String opcaoMenu;
       
        System.out.println("\n");
       
        System.out.println("=============================================");
        System.out.println("=                M  E  N  U                 =");
        System.out.println("=-------------------------------------------=");
        System.out.println("=                                           =");
        System.out.println("=             [1] - Instruções              =");
        System.out.println("=             [2] - Jogar                   =");
        System.out.println("=             [3] - Créditos                =");
        System.out.println("=             [4] - Sair                    =");
        System.out.println("=                                           =");
        System.out.println("=============================================");

        System.out.println(nomeJogador + ", escolha uma opção do MENU: ");

        opcaoMenu = entradaOpcao.next().substring(0,1);

        return opcaoMenu;
    }
/**
 * Função para mostrar as informações de instruções do jogo
 */
    public static void mostrarInstrucoesJogo() {
       
        System.out.println("\n");
        System.out.println("==========================================================================");
        System.out.println("=                        Informações sobre o jogo                        =");
        System.out.println("=------------------------------------------------------------------------=");
        System.out.println("=                                                                        =");
        System.out.println("=  Este 'Quiz' faz perguntas sobre temas de TI,  inspirado nas apresen-  =");
        System.out.println("=  tações das atividades de Pitch's da aula de Conceitos de Computação.  =");
        System.out.println("=                                                                        =");
        System.out.println("=------------------------------------------------------------------------=");
        System.out.println("=                      Instruções e regras do jogo                       =");
        System.out.println("=------------------------------------------------------------------------=");
        System.out.println("=                                                                        =");
        System.out.println("=  1. Em cada rodada do jogo será feito um total de 10 perguntas.        =");
        System.out.println("=  2. As perguntas serão selecionadas de forma aleatória.                =");
        System.out.println("=  3. Não haverá repetição de pergunta dentro da mesma rodada.           =");
        System.out.println("=  4. As perguntas são classificadas com Fácil,  Difícil ou Muito Difí-  =");
        System.out.println("=     cil, dependendo de sua complexidade.                               =");
        System.out.println("=  5. Será permito até 03(três) tentativas para responder a pergunta.    =");
        System.out.println("=  6. As respostas serão embaralhadas para não  serem  apresentadas  na  =");
        System.out.println("=     posição quando a pergunta for apresentada em uma nova  rodada  de  =");
        System.out.println("=     jogo.                                                              =");
        System.out.println("=  7. Para cada resposta certa,  será dada uma RECOMPENSA em pontos que  =");
        System.out.println("=     terá um peso,  dependendo de, em qual  tentativa (1ª, 2ª ou 3ª) a  =");
        System.out.println("=     resposta certa foi escolhida.  A RECOMPENSA só será aplicada para  =");
        System.out.println("=     as perguntas que tiver sua resposta acertada. A aplicação da  re-  =");
        System.out.println("=     compensa está descrita logo abaixo.                                =");
        System.out.println("=  8. A RECOMPENSA será transformada em BÔNUS para ser usado no auxílio  =");
        System.out.println("=     da identificação da resposta certa.  A forma de utilização do BÔ-  =");
        System.out.println("=     NUS está descrita logo abaixo.                                     =");
        System.out.println("=                                                                        =");
        System.out.println("=------------------------------------------------------------------------=");
        System.out.println("=                  Regras para a aplicação da RECOMPENSA                 =");
        System.out.println("=------------------------------------------------------------------------=");
        System.out.println("=                                                                        =");
        System.out.println("=  A RECOMPENSA será dada para cada pergunta respondida certa, seguindo  =");
        System.out.println("=  as regras abaixo,  de acordo com a classificação de  dificuldade  da  =");
        System.out.println("=  pergunta.                                                             =");
        System.out.println("=                                                                        =");
        System.out.println("=  a) Perguntas Fácil ==> acerto na 1ª tentativa ==> 100 pontos          =");
        System.out.println("=                     ==> acerto na 2ª tentativa ==>  50 pontos          =");
        System.out.println("=                     ==> acerto na 3ª tentativa ==>  25 pontos          =");
        System.out.println("=  b) Perguntas Difícil ==> acerto na 1ª tentativa ==> 200 pontos        =");
        System.out.println("=                       ==> acerto na 2ª tentativa ==> 100 pontos        =");
        System.out.println("=                       ==> acerto na 3ª tentativa ==>  50 pontos        =");
        System.out.println("=  c) Perguntas Muito Difícil ==> acerto na 1ª tentativa ==> 300 pontos  =");
        System.out.println("=                             ==> acerto na 2ª tentativa ==> 200 pontos  =");
        System.out.println("=                             ==> acerto na 3ª tentativa ==> 100 pontos  =");
        System.out.println("=                                                                        =");
        System.out.println("==========================================================================");

        aguardarEnter();
    }
/**
 * Função para mostrar as informações de créditos do jogo
 */
    public static void mostrarCreditosJogo() {
       
        System.out.println("\n");
        System.out.println("==========================================================================");
        System.out.println("=                                                                        =");
        System.out.println("=              Este jogo do tipo 'Quiz' que foi criado por:              =");
        System.out.println("=                                                                        =");
        System.out.println("=                 > Filipe Ribeiro dos Santos                            =");
        System.out.println("=                 > Nathalia Robson Aal Silva                            =");
        System.out.println("=                 > João Victor de Oliveira Silva                        =");
        System.out.println("=                 > Francisco Olivando Araújo Lourenço                   =");
        System.out.println("=                                                                        =");
        System.out.println("=------------------------------------------------------------------------=");
        System.out.println("=                         Nossos Agradecimento                           =");
        System.out.println("=------------------------------------------------------------------------=");
        System.out.println("=                                                                        =");
        System.out.println("=  Agradecemos aos alunos da turma 'B', Noite, 2º Semestre de 2022,  do  =");
        System.out.println("=  curso de Tecnólogo em Análise e Desenvolvimento de Sistema,  que nos  =");
        System.out.println("=  inspiraram a usar os assuntos apresentados nos Pitch's das aulas  de  =");
        System.out.println("=  (STADSCAS1NB-2203-6688481 2203-CONCEITO  DE  COMPUTAÇÃO),  do Profº.  =");
        System.out.println("=  Fábio Brussolo de Oliveira,  como tema para as  perguntas  do  nosso  =");
        System.out.println("=  jogo de 'Quiz', nossa entrega do Projeto Integrador I.                =");
        System.out.println("=                                                                        =");
        System.out.println("=  Agradecemos ao Profº. Galvez Gonçalves, nosso orientador,  nas aulas  =");
        System.out.println("=  de (STADSCAS1NB-2203-686305 2203-PROJETO INTEGRADOR: DESENVOLVIMENTO  =");
        System.out.println("=  DE LÓGICA, que nos apoiou durante o processo de criação deste jogo.   =");
        System.out.println("=                                                                        =");
        System.out.println("=                                                 Nosso muito obrigado.  =");
        System.out.println("=                                                                        =");
        System.out.println("==========================================================================");

        aguardarEnter();
    }
/**
 * Função para aguardar e tratar a "Tecle Enter"
 */
    public static void aguardarEnter() {
 
        System.out.println("\n");
        System.out.println("Tecle <Enter> para retornar ao menu do jogo!");
       
        BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));
       
        String teclaEnter = null;
        
        try{
            teclaEnter = bufferRead.readLine();
        } catch (IOException ioe){
            System.err.println("IO Error trying to read <Enter>");
            System.exit(1);
        }
    }
/**
 * Função para executar o jogo
 */
    public static void executarJogo(List<String> listaPerguntas) {
/**
 * Inicializar a lista de controle das perguntas (ArrayList)
 */
        listaPerguntas.set(0, "00");
        listaPerguntas.set(1, "00");
        listaPerguntas.set(2, "00");
        listaPerguntas.set(3, "00");
        listaPerguntas.set(4, "00");
        listaPerguntas.set(5, "00");
        listaPerguntas.set(6, "00");
        listaPerguntas.set(7, "00");
        listaPerguntas.set(8, "00");
        listaPerguntas.set(9, "00");
        listaPerguntas.set(10, "00");
/**
 * Criar e inicializar a lista para tratamento das respostas (ArrayList)
 */
        List <String> listaRespostas = new ArrayList<String>(5);
        listaRespostas.add("");
        listaRespostas.add("");
        listaRespostas.add("");
        listaRespostas.add("");
        listaRespostas.add("");

        int numPergunta;
        int totalPerguntas = 5;
        int qtdPergunta;

        int vlrPontuacao = 0;

        String numPerguntaSelecionada;
       
        for (qtdPergunta = 1; qtdPergunta <= totalPerguntas; qtdPergunta ++){
       
            listaPerguntas = selecionarPergunta(listaPerguntas);
            
            numPerguntaSelecionada = (String) listaPerguntas.get(0);
            numPergunta = Integer.valueOf(numPerguntaSelecionada);

            listaRespostas = embaralharRespostas(listaPerguntas, listaRespostas);
       
            vlrPontuacao = tratarResposta(listaPerguntas, listaRespostas, vlrPontuacao);
        }

        exibirResultado(listaPerguntas, vlrPontuacao);
    }
/**
 * Função para selecionar e validar a pergunta
 */
    public static List<String> selecionarPergunta(List<String> listaPerguntas) {
        
        Random numAleatorio = new Random();

        int totalPerguntas = 5;
        int numPergunta;

        String numPerguntaSelecionada;

        byte indR;
        boolean perguntaValida = false;
            
        do{
/**
 * Geração do numero aleatório da pergunta que será apresentada    
 */
            numPergunta = numAleatorio.nextInt(totalPerguntas) + 1;

            numPerguntaSelecionada = String.valueOf(numPergunta);
/**
 * Laço para validar se a pegunta selecionada aleatóriamente já foi apresentada    
 */
            indR = 0;
            
            do{
            
                indR ++;

                if(listaPerguntas.get(indR).equals("00")){

                    listaPerguntas.set(0, numPerguntaSelecionada);
                    listaPerguntas.set(indR, numPerguntaSelecionada);
                    perguntaValida = true;
                    
                        break;

                }else{
                    if(listaPerguntas.get(indR).equals(numPerguntaSelecionada)){
                    
                        break;
                    }
                }
                
            }while(!(listaPerguntas.get(indR).equals("00")));

        }while(perguntaValida!=true);
        
        return listaPerguntas;
    }
/**
 * Função para embaralhar as respostas da pergunta selecionada
 */
    public static List<String> embaralharRespostas(List<String> listaPerguntas, List<String> listaRespostas) {
/**
 * Obter as respostas da pergunta selecionada
 */
        int numPergunta;
        String numPerguntaSelecionada;

        numPerguntaSelecionada = (String) listaPerguntas.get(0);
        numPergunta = Integer.valueOf(numPerguntaSelecionada);
            
        switch (numPergunta) {
            case 1:
                
                listaRespostas.set(0, "vLâmpada de LED");
                listaRespostas.set(1, "fLâmpada Fluorescente");
                listaRespostas.set(2, "fLâmpada Incandescente");
                listaRespostas.set(3, "fLâmpada de IODO");
                listaRespostas.set(4, "fLâmpada Dicróica");
                
                break;
                
            case 2:
                
                listaRespostas.set(0, "vServiço de análise de negócios e de dados");
                listaRespostas.set(1, "fUm editor de texto");
                listaRespostas.set(2, "fUm banco de dados");
                listaRespostas.set(3, "fUm jogo RPG (Role Playing Game)");
                listaRespostas.set(4, "fIDE (Integrated Development Enviroment=");
                
                break;
                
            case 3:
                
                listaRespostas.set(0 ,"vXaas");
                listaRespostas.set(1 ,"fBaas");
                listaRespostas.set(2 ,"fSaas");
                listaRespostas.set(3 ,"fPass");
                listaRespostas.set(4 ,"fIass");
                
                break;
                
            case 4:
                
                listaRespostas.set(0 ,"vABS");
                listaRespostas.set(1 ,"fPLA");
                listaRespostas.set(2 ,"fPETG");
                listaRespostas.set(3 ,"fHIPS");
                listaRespostas.set(4 ,"fTRITAN HT");
                
                break;
                
            case 5:
                
                listaRespostas.set(0 ,"vÉ uma linguagem de propósito geral, ou seja, pode ser utilizada para as mais diversas aplicações.");
                listaRespostas.set(1 ,"fÉ uma Linguagem de Programação considerada ' Difícil ' de se usar.");
                listaRespostas.set(2 ,"fNão é uma Linguagem de Programação.");
                listaRespostas.set(3 ,"fÉ uma Linguagem de Programação aplicada no JAVA.");
                listaRespostas.set(4 ,"fNão é necessário aprender, por ser irrelevante no mundo do T.I. ");
                
                break;
        }
/**
 * Embaralharr as respostas da pergunta selecionada
 */
        Collections.shuffle(listaRespostas);
        
        return listaRespostas;
    }
/**
 * Função para tratar a resposta selecionada
 */
    public static int tratarResposta(List<String> listaPerguntas, List<String> listaRespostas, int vlrPontuacao) {
       
        String opcaoResposta;
        String txtResposta;

        boolean respostaCerta = false;
        boolean respostasExcededidas = false;

        int qtdRespostas = 0;

        do {
            opcaoResposta = exibirPergunta(listaPerguntas, listaRespostas, vlrPontuacao);
               
            qtdRespostas++;
                
            switch (opcaoResposta.toLowerCase()){
                case "a":
                    txtResposta = (String) listaRespostas.get(0);

                    if(txtResposta.substring(0,1).equalsIgnoreCase("v")){
                        
                        respostaCerta = true;

                        System.out.println("Resposta correta, na " + qtdRespostas + "ª tentativa!");
                   
                    }else{
                   
                        respostasExcededidas = validarQtdResposta(qtdRespostas);
                    }

                    break;
                    
                case "b":
                    txtResposta = (String) listaRespostas.get(1);

                    if(txtResposta.substring(0,1).equalsIgnoreCase("v")){
                        
                        respostaCerta = true;

                        System.out.println("Resposta correta, na " + qtdRespostas + "ª tentativa!");
                   
                    }else{
                   
                        respostasExcededidas = validarQtdResposta(qtdRespostas);
                    }

                    break;
                    
                case "c":
                    txtResposta = (String) listaRespostas.get(2);

                    if(txtResposta.substring(0,1).equalsIgnoreCase("v")){
                        
                        respostaCerta = true;

                        System.out.println("Resposta correta, na " + qtdRespostas + "ª tentativa!");
                   
                    }else{
                   
                        respostasExcededidas = validarQtdResposta(qtdRespostas);
                    }

                    break;
                    
                case "d":
                    txtResposta = (String) listaRespostas.get(3);

                    if(txtResposta.substring(0,1).equalsIgnoreCase("v")){
                        
                        respostaCerta = true;

                        System.out.println("Resposta correta, na " + qtdRespostas + "ª tentativa!");
                   
                    }else{
                   
                        respostasExcededidas = validarQtdResposta(qtdRespostas);
                    }

                    break;
                    
                case "e":
                    txtResposta = (String) listaRespostas.get(4);

                    if(txtResposta.substring(0,1).equalsIgnoreCase("v")){
                        
                        respostaCerta = true;

                        System.out.println("Resposta correta, na " + qtdRespostas + "ª tentativa!");
                   
                    }else{
                   
                        respostasExcededidas = validarQtdResposta(qtdRespostas);
                    }

                    break;
                    
                default:
                    respostasExcededidas = validarQtdResposta(qtdRespostas);
            }
        }while((respostaCerta != true) && (respostasExcededidas != true));
            
        if (respostaCerta == true){

            int numPergunta;

            String numPerguntaSelecionada;

            numPerguntaSelecionada = (String) listaPerguntas.get(0);

            numPergunta = Integer.valueOf(numPerguntaSelecionada);
            
            vlrPontuacao = contarRecompensa(numPergunta, qtdRespostas, vlrPontuacao);
        }
            
    return vlrPontuacao;
    }
/**
 * Função para validar a quantidade de respostas já selecionadas
 */
    public static boolean validarQtdResposta(int qtdRespostas) {
/**
 * Validar a quantidade de respostas já selecionadas
 */
        boolean respostasExcededidas;

        if(qtdRespostas == 3){
                   
            respostasExcededidas = true;

            System.err.println("Resposta incorreta nas 3 tentativas!");
                   
        }else{
                   
            respostasExcededidas = false;

            System.err.println("Resposta incorreta! Tente novamente!");
        }
                   
        return respostasExcededidas;
    }
/**
 * Função para montar a pergunta que será exibida
 */
    public static String exibirPergunta(List<String> listaPerguntas, List<String> listaRespostas, int vlrPontuacao) {
/**
 * Exibir a pergunta selecionada
 */
        Scanner entradaResposta = new Scanner (System.in);
       
        String opcaoResposta;

        int numPergunta;

        String numPerguntaSelecionada;

        numPerguntaSelecionada = (String) listaPerguntas.get(0);

        numPergunta = Integer.valueOf(numPerguntaSelecionada);
            
        switch (numPergunta) {
            case 01:
                exibirPergunta01(listaPerguntas, listaRespostas, vlrPontuacao);
                
                break;
            case 02:
                exibirPergunta02(listaPerguntas, listaRespostas, vlrPontuacao);
                
                break;
            case 03:
                exibirPergunta03(listaPerguntas, listaRespostas, vlrPontuacao);
                
                break;
            case 04:
                exibirPergunta04(listaPerguntas, listaRespostas, vlrPontuacao);
                
                break;
            case 05:
                exibirPergunta05(listaPerguntas, listaRespostas, vlrPontuacao);
                
                break;
        }

        System.out.println("Escolha uma resposta: ");

        opcaoResposta = entradaResposta.next().substring(0,1);
        
        return opcaoResposta;
    }
/**
 * Função para exibir a pergunta nº 01
 */
    public static void exibirPergunta01(List<String> listaPerguntas, List<String> listaRespostas, int vlrPontuacao) {
       
        String nomeJogador;

        String txtResposta;
                
        nomeJogador = (String) listaPerguntas.get(11);
        
        System.out.println("=======================================================");
        System.out.println(" Jogador: " + nomeJogador + " | Pontuação: " + vlrPontuacao);
        System.out.println("-------------------------------------------------------");
        System.out.println("             T E M A  D A  P E R G U N T A             ");
        System.out.println("                 <<<<<   LI-FI   >>>>>                 ");
        System.out.println("-------------------------------------------------------");
        System.out.println("           Classificação da Pergunta : FÁCIL           ");
        System.out.println("=======================================================");
        System.out.println("                                                       ");
        System.out.println("     Considerando que a transmissão de dados usada     ");
        System.out.println("     pela tecnólogia LI-FI é a LUZ, podemos afirmar    ");
        System.out.println("     que o tipo de lâmpada ideal para usar é:          ");
        System.out.println("                                                       ");
                
        txtResposta = (String) listaRespostas.get(0);
        
        System.out.println("     a) " + txtResposta.substring(1));
                
        txtResposta = (String) listaRespostas.get(1);
        
        System.out.println("     b) " + txtResposta.substring(1));
                
        txtResposta = (String) listaRespostas.get(2);
        
        System.out.println("     c) " + txtResposta.substring(1));
                
        txtResposta = (String) listaRespostas.get(3);
        
        System.out.println("     d) " + txtResposta.substring(1));
                
        txtResposta = (String) listaRespostas.get(4);
        
        System.out.println("     e) " + txtResposta.substring(1));
        System.out.println("                                                       ");
        System.out.println("=======================================================");
    }
/**
 * Função para exibir a pergunta nº 02
 */
    public static void exibirPergunta02(List<String> listaPerguntas, List<String> listaRespostas, int vlrPontuacao) {
       
        String nomeJogador;

        String txtResposta;
                
        nomeJogador = (String) listaPerguntas.get(11);
        
        System.out.println("=======================================================");
        System.out.println(" Jogador: " + nomeJogador + " | Pontuação: " + vlrPontuacao);
        System.out.println("-------------------------------------------------------");
        System.out.println("             T E M A  D A  P E R G U N T A             ");
        System.out.println("               <<<<<   POWER BI   >>>>>                ");
        System.out.println("-------------------------------------------------------");
        System.out.println("          Classificação da Pergunta : DÍFICIL          ");
        System.out.println("=======================================================");
        System.out.println("                                                       ");
        System.out.println("     Sobre POWER BI, podemos afirmar que é:            ");
        System.out.println("                                                       ");
                
        txtResposta = (String) listaRespostas.get(0);
        
        System.out.println("     a) " + txtResposta.substring(1));
                
        txtResposta = (String) listaRespostas.get(1);
        
        System.out.println("     b) " + txtResposta.substring(1));
                
        txtResposta = (String) listaRespostas.get(2);
        
        System.out.println("     c) " + txtResposta.substring(1));
                
        txtResposta = (String) listaRespostas.get(3);
        
        System.out.println("     d) " + txtResposta.substring(1));
                
        txtResposta = (String) listaRespostas.get(4);
        
        System.out.println("     e) " + txtResposta.substring(1));
        System.out.println("                                                       ");
        System.out.println("=======================================================");
    }
/**
 * Função para exibir a pergunta nº 03
 */
    public static void exibirPergunta03(List<String> listaPerguntas, List<String> listaRespostas, int vlrPontuacao) {
       
        String nomeJogador;

        String txtResposta;
                
        nomeJogador = (String) listaPerguntas.get(11);
        
        System.out.println("=======================================================");
        System.out.println(" Jogador: " + nomeJogador + " | Pontuação: " + vlrPontuacao);
        System.out.println("-------------------------------------------------------");
        System.out.println("             T E M A  D A  P E R G U N T A             ");
        System.out.println("          <<<<<   COMPUTAÇÃO EM NUVEM   >>>>>          ");
        System.out.println("-------------------------------------------------------");
        System.out.println("       Classificação da Pergunta : MUITO DÍFICIL       ");
        System.out.println("=======================================================");
        System.out.println("                                                       ");
        System.out.println("     Considerando os tipos de serviço oferecidos na    ");
        System.out.println("     nuvem, qual opção abaixo NÃO corresponde à um     ");
        System.out.println("     serviço em nuvem?                                 ");
        System.out.println("                                                       ");
                
        txtResposta = (String) listaRespostas.get(0);
        
        System.out.println("     a) " + txtResposta.substring(1));
                
        txtResposta = (String) listaRespostas.get(1);
        
        System.out.println("     b) " + txtResposta.substring(1));
                
        txtResposta = (String) listaRespostas.get(2);
        
        System.out.println("     c) " + txtResposta.substring(1));
                
        txtResposta = (String) listaRespostas.get(3);
        
        System.out.println("     d) " + txtResposta.substring(1));
                
        txtResposta = (String) listaRespostas.get(4);
        
        System.out.println("     e) " + txtResposta.substring(1));
        System.out.println("                                                       ");
        System.out.println("=======================================================");
    }
/**
 * Função para exibir a pergunta nº 04
 */
    public static void exibirPergunta04(List<String> listaPerguntas, List<String> listaRespostas, int vlrPontuacao) {
       
        String nomeJogador;

        String txtResposta;
                
        nomeJogador = (String) listaPerguntas.get(11);
        
        System.out.println("=======================================================");
        System.out.println(" Jogador: " + nomeJogador + " | Pontuação: " + vlrPontuacao);
        System.out.println("-------------------------------------------------------");
        System.out.println("             T E M A  D A  P E R G U N T A             ");
        System.out.println("             <<<<<   IMPRESSÃO 3D   >>>>>              ");
        System.out.println("-------------------------------------------------------");
        System.out.println("          Classificação da Pergunta : DÍFICIL          ");
        System.out.println("=======================================================");
        System.out.println("                                                       ");
        System.out.println("     Qual o tipo mais comum de filamento utilizado     ");
        System.out.println("     em impressoras 3D?                                ");
        System.out.println("                                                       ");
                
        txtResposta = (String) listaRespostas.get(0);
        
        System.out.println("     a) " + txtResposta.substring(1));
                
        txtResposta = (String) listaRespostas.get(1);
        
        System.out.println("     b) " + txtResposta.substring(1));
                
        txtResposta = (String) listaRespostas.get(2);
        
        System.out.println("     c) " + txtResposta.substring(1));
                
        txtResposta = (String) listaRespostas.get(3);
        
        System.out.println("     d) " + txtResposta.substring(1));
                
        txtResposta = (String) listaRespostas.get(4);
        
        System.out.println("     e) " + txtResposta.substring(1));
        System.out.println("                                                       ");
        System.out.println("=======================================================");
    }
/**
 * Função para exibir a pergunta nº 05
 */
    public static void exibirPergunta05(List<String> listaPerguntas, List<String> listaRespostas, int vlrPontuacao) {
       
        String nomeJogador;

        String txtResposta;
                
        nomeJogador = (String) listaPerguntas.get(11);
        
        System.out.println("=======================================================");
        System.out.println(" Jogador: " + nomeJogador + " | Pontuação: " + vlrPontuacao);
        System.out.println("-------------------------------------------------------");
        System.out.println("             T E M A  D A  P E R G U N T A             ");
        System.out.println("                <<<<<   PYTHON   >>>>>                 ");
        System.out.println("-------------------------------------------------------");
        System.out.println("           Classificação da Pergunta : FÁCIL           ");
        System.out.println("=======================================================");
        System.out.println("                                                       ");
        System.out.println("     Sobre Python podemos afirmar que:                 ");
        System.out.println("                                                       ");
                
        txtResposta = (String) listaRespostas.get(0);
        
        System.out.println("     a) " + txtResposta.substring(1));
                
        txtResposta = (String) listaRespostas.get(1);
        
        System.out.println("     b) " + txtResposta.substring(1));
                
        txtResposta = (String) listaRespostas.get(2);
        
        System.out.println("     c) " + txtResposta.substring(1));
                
        txtResposta = (String) listaRespostas.get(3);
        
        System.out.println("     d) " + txtResposta.substring(1));
                
        txtResposta = (String) listaRespostas.get(4);
        
        System.out.println("     e) " + txtResposta.substring(1));
        System.out.println("                                                       ");
        System.out.println("=======================================================");
    }
/**
* Função para contar a recompensa pela pergunta respondida
*/
    public static int contarRecompensa(int numPergunta, int qtdRespostas, int vlrPontuacao) {
/**
 * Contar a recompensa pela classificação de dificuldade da pergunta
 */
        switch(numPergunta){
/**
 * Pergunta(s) de classificação FÁCIL
 */
            case 01:
            case 05:
                if(qtdRespostas == 1){

                    vlrPontuacao = vlrPontuacao + 100;
                   
                }else{
                    if(qtdRespostas == 2){

                        vlrPontuacao = vlrPontuacao + 50;
                   
                    }else{

                        vlrPontuacao = vlrPontuacao + 25;
                    }
                }
                
                break;
/**
 * Pergunta(s) de classificação DÍFICIL
 */
            case 02:
            case 04:
                if(qtdRespostas == 1){

                    vlrPontuacao = vlrPontuacao + 200;
                   
                }else{
                    if(qtdRespostas == 2){

                        vlrPontuacao = vlrPontuacao + 100;
                   
                    }else{

                        vlrPontuacao = vlrPontuacao + 50;
                    }
                }

                break;
/**
 * Pergunta(s) de classificação MUITO DÍFICIL
 */
            case 03:
                if(qtdRespostas == 1){

                    vlrPontuacao = vlrPontuacao + 300;
                   
                }else{
                    if(qtdRespostas == 2){

                        vlrPontuacao = vlrPontuacao + 200;
                   
                    }else{

                        vlrPontuacao = vlrPontuacao + 100;
                    }
                }

                break;
        }
       
        return vlrPontuacao;
    }
/**
* Função para exibir o resultado do jogo
*/
    public static void exibirResultado(List<String> listaPerguntas, int vlrPontuacao) {
/**
* Pergunta(s) de classificação FÁCIL
*/
        int limitador01 = 900;
        int limitador02 = 450;
        int limitador03 = 225;

        String nomeJogador = (String) listaPerguntas.get(11);

        System.out.println("\n");
       
        System.out.println("=============================================");
        System.out.println("                                             ");
        System.out.println(" " + nomeJogador + ", você fez " + vlrPontuacao + " pontos!");
        System.out.println("                                             ");

        if(vlrPontuacao == limitador01){

            System.out.println(" Parabéns! Você foi EXCELENTE!");
                   
        }else{
            if((vlrPontuacao < limitador01) && (vlrPontuacao >= limitador02)){

                System.out.println(" Parabéns! Você foi ÓTIMO!");
                   
            }else{
                if((vlrPontuacao < limitador02) && (vlrPontuacao >= limitador03)){

                    System.out.println(" Parabéns! Você foi BOM!");
                   
                }else{
                    if((vlrPontuacao < limitador03) && (vlrPontuacao > 0)){

                        System.out.println(" Se esforce um pouco MAIS!");
                   
                    }else{

                        System.out.println(" NÂO desista! Você pode melhorar!");
                    }
                }
            }
        }

        System.out.println("                                             ");
        System.out.println("=============================================");
    }
}
